[language-server.scls]
command = "simple-completion-language-server"

[language-server.scls.config]
max_completion_items = 20            # set max completion results len for each group: words, snippets, unicode-input
snippets_first = true                # completions will return before snippets by default
snippets_inline_by_word_tail = false # suggest snippets by WORD tail, for example text `xsq|` become `x^2|` when snippet `sq` has body `^2`
feature_words = true                 # enable completion by word
feature_snippets = true              # enable snippets
feature_unicode_input = true         # enable "unicode input"
feature_paths = true                 # enable path completion
feature_citations = false            # enable citation completion (only on `citation` feature enabled)

[language-server.harper-ls]
command = "harper-ls"
args = ["--stdio"]

[language-server.biome]
command = "biome"
args = ["lsp-proxy"]

[language-server.tailwindcss]
command = "tailwindcss-language-server"
args = ["--stdio"]

[language-server.ruff]
command = "ruff"
args = ["server"]
environment = { "RUFF_TRACE" = "messages" }

[language-server.ruff.config.settings]
logLevel = "debug"

[language-server.gopls.config.hints]
# assignVariableTypes = true
# compositeLiteralFields = true
# constantValues = true
# functionTypeParameters = true
# parameterNames = true
# rangeVariableTypes = true

[language-server.typescript-language-server.config.javascript.inlayHints]
# includeInlayEnumMemberValueHints = true
# includeInlayFunctionLikeReturnTypeHints = true
# includeInlayFunctionParameterTypeHints = true
# includeInlayParameterNameHints = "all"
# includeInlayParameterNameHintsWhenArgumentMatchesName = true
# includeInlayPropertyDeclarationTypeHints = true
# includeInlayVariableTypeHints = true

[language-server.lua-language-server.config.Lua.hint]
enable = true
arrayIndex = "Disable"
setType = true
paramName = "All"
paramType = true
await = true

[language-server.astro-ls]
command = "astro-ls"
args = ["--stdio"]
config = { contentIntellisense = true, typescript = { tsdk = "/Users/Abe/.bun/install/global/node_modules/typescript/lib" }, environment = "node" }

[[language]]
name = "astro"
scope = "source.astro"
file-types = ["astro"]
language-servers = ["astro-ls"]
auto-format = true
formatter = { command = "prettier", args = [
  "--plugin",
  "prettier-plugin-astro",
  "--parser",
  "astro",
] }

[[language]]
name = "go"
auto-format = true
formatter = { command = "goimports" }

[[language]]
name = "lua"
auto-format = true

[[language]]
name = "markdown"
auto-format = true
soft-wrap.enable = true
comment-tokens = ["-", "+", "*", "1.", ">", "- [ ]"]
formatter = { command = "dprint", args = ["fmt", "--stdin", "md"] }

[[language]]
name = "php"
auto-format = true

[[language]]
name = "python"
language-servers = ["pylsp"]
auto-format = true
formatter = { command = "ruff", args = ["format", "-n", "-"] }

[language-server.pylsp.config.pylsp.plugins]
jedi = { environment = "venv/" }

[[language]]
name = "toml"
auto-format = true
formatter = { command = "taplo", args = ["format", "-"] }

[[language]]
name = "xml"
auto-format = true
formatter = { command = "xmllint", args = ["--format", "-"] }

[[language]]
name = "html"
auto-format = true
# formatter = { command = "tidy", args = ["-q", "-i", "--tidy-mark", "no", "--"] }

[[language]]
name = "css"
auto-format = true
language-servers = ["scls", "vscode-css-language-server", "tailwindcss"]

[[language]]
name = "javascript"
language-servers = [
  "scls",
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
]
auto-format = true

[[language]]
name = "typescript"
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
]
auto-format = true

[[language]]
name = "tsx"
auto-format = true
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
  "tailwindcss",
]

[[language]]
name = "jsx"
auto-format = true
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
  "tailwindcss",
]

[[language]]
name = "json"
language-servers = [
  { name = "vscode-json-language-server", except-features = [
    "format",
  ] },
  "biome",
]
